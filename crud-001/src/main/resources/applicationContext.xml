<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
                        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!--数据库连接信息-->
    <context:property-placeholder location="classpath:properties/jdbc.properties"/>
    <!-- Spring希望管理所有的业务逻辑组件，等。。。 -->
    <context:component-scan base-package="com.zhang.ssm">
        <context:exclude-filter type="annotation"
                                expression="org.springframework.stereotype.Controller" />
    </context:component-scan>
    <!--阿里连接池-->
    <bean  name="dataSource" class="com.alibaba.druid.pool.DruidDataSource"  init-method="init" destroy-method="close" >
        <property name="url" value="${url}"></property>
        <property name="username" value="${user}"></property>
        <property name="password" value="${password}"></property>
    </bean>

    <!--SQLSessionFactory-->
    <bean class="org.mybatis.spring.SqlSessionFactoryBean" name="factory">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:myBits/mybatis.xml" />
    </bean>
    <!--配置一个可以进行批量执行的sqlSession  -->
    <bean name="sessionTemplate" class="org.mybatis.spring.SqlSessionTemplate" >
        <constructor-arg name="sqlSessionFactory" ref="factory"/>
        <constructor-arg name="executorType" value="BATCH"/>
    </bean>
    <!-- 扫描所有的mapper接口的实现，让这些mapper能够自动注入；
     base-package：指定mapper接口的包名
      -->
    <!--<mybatis-spring:scan base-package="com.zhang.ssm.dao"/>-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.zhang.ssm.dao"></property>
    </bean>

    <bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="transactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--<tx:annotation-driven/>-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="*" propagation="REQUIRED" rollback-for="java.lang.Exception" isolation="DEFAULT"/>
        </tx:attributes>


    </tx:advice>

    <aop:config>
         <aop:pointcut id="pc" expression="execution(* com.zhang.ssm.service..*(..))"/>
         <aop:advisor advice-ref="txAdvice" pointcut-ref="pc"/>
    </aop:config>
</beans>
