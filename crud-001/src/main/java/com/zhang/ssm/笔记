一、<!--reset风格的url，将普通的post请求转为指定的put和delete请求-->
  <filter>
    <filter-name>hiddenHttpMethodFilter</filter-name>
    <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
  </filter>

二、spring的测试

  @RunWith(SpringJUnit4ClassRunner.class)
  @ContextConfiguration(locations = {"classpath:applicationContext.xml"})

三、批量插入

    1、    @Autowired
          private SqlSession sqlSession;

    2、EmployeeMapper mapper = sqlSession.getMapper(EmployeeMapper.class);

    3、<bean name="sessionTemplate" class="org.mybatis.spring.SqlSessionTemplate" >
           *         <constructor-arg name="sqlSessionFactory" ref="factory"/>
           *         <constructor-arg name="executorType" value="BATCH"/>
           *     </bean>



四、mvc MockMvc模拟测试

    1、导入注解@WebAppConfiguration

    2、定义MockMVC和注入mvc容器
          @Autowired
          private WebApplicationContext context;
          MockMvc mockMvc;

    3、在测试前获取MockMvc
       @Before
           public void initMockMvc(){
               mockMvc = MockMvcBuilders.webAppContextSetup(context).build();
           }

    4、测试+从request域对象中取出数据
        MvcResult result = mockMvc.perform(MockMvcRequestBuilders.get("/emps").param("pn","1")).andReturn();
               MockHttpServletRequest request = result.getRequest();